// <auto-generated />
using System;
using Antemis.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Antemis.Migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Antemis.Database.Customer", b =>
                {
                    b.Property<string>("Customerinn")
                        .HasColumnType("text")
                        .HasColumnName("customerinn");

                    b.Property<DateOnly>("Arrivaldate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("arrivaldate")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<int>("Hotelid")
                        .HasColumnType("integer")
                        .HasColumnName("hotelid");

                    b.Property<DateOnly>("Leavingdate")
                        .HasColumnType("date")
                        .HasColumnName("leavingdate");

                    b.Property<int?>("Prepayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("prepayment");

                    b.Property<int>("Roomnumber")
                        .HasColumnType("integer")
                        .HasColumnName("roomnumber");

                    b.HasKey("Customerinn")
                        .HasName("customers_pkey");

                    b.HasIndex("Hotelid", "Roomnumber");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Hotel", b =>
                {
                    b.Property<int>("Hotelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hotelid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Hotelid"));

                    b.Property<string>("Hoteldirectorinn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hoteldirectorinn");

                    b.Property<string>("Hotelimage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("hotelimage")
                        .HasDefaultValueSql("'hotel_icon.png'::text");

                    b.Property<string>("Hotelinn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotelinn");

                    b.Property<string>("Hotelname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotelname");

                    b.Property<string>("Hotelownerinn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotelownerinn");

                    b.Property<string>("Hotelpassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotelpassword");

                    b.HasKey("Hotelid")
                        .HasName("hotels_pkey");

                    b.HasIndex("Hoteldirectorinn");

                    b.HasIndex("Hotelownerinn");

                    b.HasIndex(new[] { "Hotelinn" }, "hotels_hotelinn_key")
                        .IsUnique();

                    b.ToTable("hotels", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Person", b =>
                {
                    b.Property<string>("Inn")
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<DateOnly?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Descryption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("descryption")
                        .HasDefaultValueSql("''::text");

                    b.Property<char>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Patronimic")
                        .HasColumnType("text")
                        .HasColumnName("patronimic");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Inn")
                        .HasName("persons_pkey");

                    b.ToTable("persons", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Reservation", b =>
                {
                    b.Property<string>("Customerinn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("customerinn");

                    b.Property<int>("Hotelid")
                        .HasColumnType("integer")
                        .HasColumnName("hotelid");

                    b.Property<int>("Roomnumber")
                        .HasColumnType("integer")
                        .HasColumnName("roomnumber");

                    b.HasIndex("Customerinn");

                    b.HasIndex("Hotelid", "Roomnumber");

                    b.ToTable("reservations", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Room", b =>
                {
                    b.Property<int>("Hotelid")
                        .HasColumnType("integer")
                        .HasColumnName("hotelid");

                    b.Property<int>("Roomnumber")
                        .HasColumnType("integer")
                        .HasColumnName("roomnumber");

                    b.Property<string>("Imagename")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("imagename")
                        .HasDefaultValueSql("'room_icon.png'::text");

                    b.Property<bool?>("Isavaible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isavaible");

                    b.Property<int?>("Placesamount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(2)
                        .HasColumnName("placesamount");

                    b.Property<int>("Priceforday")
                        .HasColumnType("integer")
                        .HasColumnName("priceforday");

                    b.Property<string>("Roomdescryprion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("roomdescryprion")
                        .HasDefaultValueSql("'Информация не добавлена'::text");

                    b.HasKey("Hotelid", "Roomnumber")
                        .HasName("rooms_primary_key_check");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Userid"));

                    b.Property<string>("Imagename")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("imagename")
                        .HasDefaultValueSql("'user_icon.png'::text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<string>("Userlogin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("userlogin");

                    b.Property<string>("Userpassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("userpassword");

                    b.HasKey("Userid")
                        .HasName("users_pkey");

                    b.HasIndex(new[] { "Inn" }, "users_inn_key")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Work", b =>
                {
                    b.Property<int>("Workid")
                        .HasColumnType("integer")
                        .HasColumnName("workid");

                    b.Property<string>("Workname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("workname");

                    b.HasKey("Workid")
                        .HasName("works_pkey");

                    b.HasIndex(new[] { "Workname" }, "works_workname_key")
                        .IsUnique();

                    b.ToTable("works", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Worker", b =>
                {
                    b.Property<string>("Inn")
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<int>("Hotelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hotelid");

                    b.Property<string>("Imagename")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("imagename")
                        .HasDefaultValueSql("'user_icon.png'::text");

                    b.Property<int>("Workid")
                        .HasColumnType("integer")
                        .HasColumnName("workid");

                    b.HasKey("Inn")
                        .HasName("workers_pkey");

                    b.HasIndex("Hotelid");

                    b.HasIndex("Workid");

                    b.ToTable("workers", (string)null);
                });

            modelBuilder.Entity("Antemis.Database.Customer", b =>
                {
                    b.HasOne("Antemis.Database.Person", "CustomerinnNavigation")
                        .WithOne("Customer")
                        .HasForeignKey("Antemis.Database.Customer", "Customerinn")
                        .IsRequired()
                        .HasConstraintName("customers_customerinn_fkey");

                    b.HasOne("Antemis.Database.Hotel", "Hotel")
                        .WithMany("Customers")
                        .HasForeignKey("Hotelid")
                        .IsRequired()
                        .HasConstraintName("customers_hotelid_fkey");

                    b.HasOne("Antemis.Database.Room", "Room")
                        .WithMany("Customers")
                        .HasForeignKey("Hotelid", "Roomnumber")
                        .IsRequired()
                        .HasConstraintName("cust_to_rooms_ref");

                    b.Navigation("CustomerinnNavigation");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Antemis.Database.Hotel", b =>
                {
                    b.HasOne("Antemis.Database.Person", "HoteldirectorinnNavigation")
                        .WithMany("HotelHoteldirectorinnNavigations")
                        .HasForeignKey("Hoteldirectorinn")
                        .IsRequired()
                        .HasConstraintName("hotels_hoteldirectorinn_fkey");

                    b.HasOne("Antemis.Database.Person", "HotelownerinnNavigation")
                        .WithMany("HotelHotelownerinnNavigations")
                        .HasForeignKey("Hotelownerinn")
                        .IsRequired()
                        .HasConstraintName("hotels_hotelownerinn_fkey");

                    b.Navigation("HoteldirectorinnNavigation");

                    b.Navigation("HotelownerinnNavigation");
                });

            modelBuilder.Entity("Antemis.Database.Reservation", b =>
                {
                    b.HasOne("Antemis.Database.Customer", "CustomerinnNavigation")
                        .WithMany()
                        .HasForeignKey("Customerinn")
                        .IsRequired()
                        .HasConstraintName("reservations_customerinn_fkey");

                    b.HasOne("Antemis.Database.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("Hotelid")
                        .IsRequired()
                        .HasConstraintName("reservations_hotelid_fkey");

                    b.HasOne("Antemis.Database.Room", "Room")
                        .WithMany()
                        .HasForeignKey("Hotelid", "Roomnumber")
                        .IsRequired()
                        .HasConstraintName("res_to_rooms_ref");

                    b.Navigation("CustomerinnNavigation");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Antemis.Database.Room", b =>
                {
                    b.HasOne("Antemis.Database.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("Hotelid")
                        .IsRequired()
                        .HasConstraintName("rooms_hotelid_fkey");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Antemis.Database.User", b =>
                {
                    b.HasOne("Antemis.Database.Person", "InnNavigation")
                        .WithOne("User")
                        .HasForeignKey("Antemis.Database.User", "Inn")
                        .IsRequired()
                        .HasConstraintName("users_inn_fkey");

                    b.Navigation("InnNavigation");
                });

            modelBuilder.Entity("Antemis.Database.Worker", b =>
                {
                    b.HasOne("Antemis.Database.Hotel", "Hotel")
                        .WithMany("Workers")
                        .HasForeignKey("Hotelid")
                        .IsRequired()
                        .HasConstraintName("workers_hotelid_fkey");

                    b.HasOne("Antemis.Database.Person", "InnNavigation")
                        .WithOne("Worker")
                        .HasForeignKey("Antemis.Database.Worker", "Inn")
                        .IsRequired()
                        .HasConstraintName("workers_inn_fkey");

                    b.HasOne("Antemis.Database.Work", "Work")
                        .WithMany("Workers")
                        .HasForeignKey("Workid")
                        .IsRequired()
                        .HasConstraintName("workers_workid_fkey");

                    b.Navigation("Hotel");

                    b.Navigation("InnNavigation");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Antemis.Database.Hotel", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Rooms");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Antemis.Database.Person", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("HotelHoteldirectorinnNavigations");

                    b.Navigation("HotelHotelownerinnNavigations");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Antemis.Database.Room", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Antemis.Database.Work", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
